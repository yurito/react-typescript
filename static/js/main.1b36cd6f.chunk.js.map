{"version":3,"sources":["components/animation/fluid/config.js","components/animation/fluid/utils.js","components/animation/fluid/customHooks/usePrograms/shaders/base.vert.js","components/animation/fluid/customHooks/usePrograms/shaders/advection.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/advection.manual.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/background.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/clear.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/color.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/curl.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/display.shading.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/divergence.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/gradient.subtract.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/pressure.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/splat.frag.js","components/animation/fluid/customHooks/usePrograms/shaders/vorticity.frag.js","components/animation/fluid/customHooks/usePrograms/index.js","components/animation/fluid/customHooks/useFramebuffers.js","components/animation/fluid/customHooks/usePointers.js","components/animation/fluid/customHooks/useFormats.js","components/animation/fluid/customHooks/useResolution.js","components/animation/fluid/Simulation.js","components/animation/fluid/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["SIM_RESOLUTION","DYE_RESOLUTION","DENSITY_DISSIPATION","VELOCITY_DISSIPATION","PRESSURE_DISSIPATION","PRESSURE_ITERATIONS","CURL","SPLAT_RADIUS","TRANSPARENT","generateColor","c","h","s","v","r","g","b","i","Math","floor","f","p","q","t","HSVtoRGB","random","useProgramAndUniforms","gl","frag","program","useProgram","shaders","uniforms","useProgramUniforms","useMemo","useFramebuffers","dyeSize","simSize","formats","R","RG","RGBA","halfFloat","hasLinear","getOptsRFormat","type","minMag","NEAREST","format","internalFormat","curlFBO","useFBO","divergenceFBO","densityDFBO","useDoubleFBO","LINEAR","pressureDFBO","velocityDFBO","Pointer","this","id","x","y","dx","dy","down","moved","color","getSupportedFormat","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","fbo","createFramebuffer","attach","COLOR_ATTACHMENT0","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","supportRenderTextureFormat","R16F","RG16F","RGBA16F","useResolution","size","width","height","aspectRatio","max","round","min","backColor","convertHex","Simulation","useCanvasSize","clientWidth","clientHeight","useWebGLContext","version","useWebGLVersion","texHalfFLoat","webgl2","getExtension","HALF_FLOAT","HALF_FLOAT_OES","RED","useFormats","pointers","canvas","useCanvas","useEffect","lastColorChange","timerLoop","timer","Date","now","length","stop","onMouseMove","e","pageX","pageY","offsetLeft","offsetTop","onTouchMove","preventDefault","touches","targetTouches","pointer","onMouseDown","onTouchStart","push","identifier","onMouseUp","onTouchEnd","changedTouches","j","removeEventListener","window","usePointers","programs","advection","background","clear","curl","displayShading","divergence","gradient","pressure","splat","vorticity","usePrograms","config","framebuffers","splatStack","renderToBuffer","verts","Float32Array","index","Uint16Array","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","vertexAttribPointer","FLOAT","enableVertexAttribArray","buffer","drawElements","TRIANGLES","UNSIGNED_SHORT","updateSplat","splatRGB","viewport","centerX","centerY","uniform1i","uTarget","read","uniform1f","uniform2f","point","uniform3f","radius","write","swap","multipleSplats","amount","pop","input","dt","disable","BLEND","texelSize","uVelocity","uCurl","uTexture","value","uDivergence","uPressure","shasLinear","dyeTexelSize","velocityId","uSource","dissipation","step","target","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","tWidth","tHeight","uniform4f","render","parseInt","attrs","alpha","depth","stencil","antialias","preserveDrawingBuffer","style","borderRadius","cursor","userSelect","WebkitTapHighlightColor","FluidSimulation","props","container","useRef","useMeasure","ref","innerHeight","canvasStyle","contextAttrs","children","App","className","top","bottom","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b36cd6f.chunk.js","sourcesContent":["export const SIM_RESOLUTION = 128\nexport const DYE_RESOLUTION = 720\nexport const DENSITY_DISSIPATION = 0.98\nexport const VELOCITY_DISSIPATION = 0.98\nexport const PRESSURE_DISSIPATION = 0.8\nexport const PRESSURE_ITERATIONS = 20\nexport const CURL = 30\nexport const SPLAT_RADIUS = 0.5\nexport const SHADING = true\nexport const COLORFUL = true\nexport const BACK_COLOR = { r: 0, g: 255, b: 0 }\nexport const TRANSPARENT = false\n","export function generateColor() {\n  const c = HSVtoRGB(Math.random(), 1.0, 1.0)\n\n  c.r *= 0.15\n  c.g *= 0.15\n  c.b *= 0.15\n\n  return c\n}\n\n// prettier-ignore\nfunction HSVtoRGB(h, s, v) {\n  const i = Math.floor(h * 6)\n  const f = h * 6 - i\n  const p = v * (1 - s)\n  const q = v * (1 - f * s)\n  const t = v * (1 - (1 - f) * s)\n  \n  let r, g, b\n  \n  switch (i % 6) {\n    case 0:\n      (r = v); (g = t); (b = p)\n      break\n    case 1:\n      (r = q); (g = v); (b = p)\n      break\n    case 2:\n      (r = p); (g = v); (b = t)\n      break\n    case 3:\n      (r = p); (g = q); (b = v)\n      break\n    case 4:\n      (r = t); (g = p); (b = v)\n      break\n    case 5:\n      (r = v); (g = p); (b = q)\n      break\n\n      default: return\n  }\n\n  return { r, g, b }\n}\n","export default `\n  precision highp float;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  attribute vec2 aPosition;\n\n  uniform vec2 texelSize;\n\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  varying vec2 vT;\n  varying vec2 vB;\n  \n  void main () {\n    vUv = aPosition * 0.5 + 0.5;\n    vL = vUv - vec2(texelSize.x, 0.0);\n    vR = vUv + vec2(texelSize.x, 0.0);\n    vT = vUv + vec2(0.0, texelSize.y);\n    vB = vUv - vec2(0.0, texelSize.y);\n\n    gl_Position = vec4(aPosition, 0.0, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  uniform sampler2D uVelocity;\n  uniform sampler2D uSource;\n  uniform vec2 texelSize;\n  uniform float dt;\n  uniform float dissipation;\n\n  void main () {\n    vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n    gl_FragColor = dissipation * texture2D(uSource, coord);\n    gl_FragColor.a = 1.0;\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  uniform sampler2D uVelocity;\n  uniform sampler2D uSource;\n  uniform vec2 texelSize;\n  uniform vec2 dyeTexelSize;\n  uniform float dt;\n  uniform float dissipation;\n\n  vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n    vec2 st = uv / tsize - 0.5;\n\n    vec2 iuv = floor(st);\n    vec2 fuv = fract(st);\n\n    vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n    vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n    vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n    vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n    return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n  }\n\n  void main () {\n    vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n\n    gl_FragColor = dissipation * bilerp(uSource, coord, dyeTexelSize);\n    gl_FragColor.a = 1.0;\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  uniform sampler2D uTexture;\n  uniform float aspectRatio;\n\n  #define SCALE 25.0\n\n  void main () {\n    vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n    float v = mod(uv.x + uv.y, 2.0);\n    v = v * 0.1 + 0.8;\n    gl_FragColor = vec4(vec3(v), 1.0);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  uniform sampler2D uTexture;\n  uniform float value;\n\n  void main () {\n    gl_FragColor = value * texture2D(uTexture, vUv);\n  }\n`\n","export default `\n  precision mediump float;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  uniform vec4 color;\n\n  void main () {\n    gl_FragColor = color;\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  uniform sampler2D uVelocity;\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n\n  void main () {\n    float L = texture2D(uVelocity, vL).y;\n    float R = texture2D(uVelocity, vR).y;\n    float T = texture2D(uVelocity, vT).x;\n    float B = texture2D(uVelocity, vB).x;\n    float vorticity = R - L - T + B;\n\n    gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  varying vec2 vT;\n  varying vec2 vB;\n  uniform sampler2D uTexture;\n  uniform vec2 texelSize;\n\n  void main () {\n    vec3 L = texture2D(uTexture, vL).rgb;\n    vec3 R = texture2D(uTexture, vR).rgb;\n    vec3 T = texture2D(uTexture, vT).rgb;\n    vec3 B = texture2D(uTexture, vB).rgb;\n    vec3 C = texture2D(uTexture, vUv).rgb;\n\n    float dx = length(R) - length(L);\n    float dy = length(T) - length(B);\n\n    vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n    vec3 l = vec3(0.0, 0.0, 1.0);\n\n    float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n    C.rgb *= diffuse;\n\n    float a = max(C.r, max(C.g, C.b));\n    gl_FragColor = vec4(C, a);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n  uniform sampler2D uVelocity;\n\n  void main () {\n    float L = texture2D(uVelocity, vL).x;\n    float R = texture2D(uVelocity, vR).x;\n    float T = texture2D(uVelocity, vT).y;\n    float B = texture2D(uVelocity, vB).y;\n\n    vec2 C = texture2D(uVelocity, vUv).xy;\n    if (vL.x < 0.0) { L = -C.x; }\n    if (vR.x > 1.0) { R = -C.x; }\n    if (vT.y > 1.0) { T = -C.y; }\n    if (vB.y < 0.0) { B = -C.y; }\n\n    float div = 0.5 * (R - L + T - B);\n\n    gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n  uniform sampler2D uPressure;\n  uniform sampler2D uVelocity;\n\n  vec2 boundary (vec2 uv) {\n    return uv;\n    // uv = min(max(uv, 0.0), 1.0);\n    // return uv;\n  }\n\n  void main () {\n    float L = texture2D(uPressure, boundary(vL)).x;\n    float R = texture2D(uPressure, boundary(vR)).x;\n    float T = texture2D(uPressure, boundary(vT)).x;\n    float B = texture2D(uPressure, boundary(vB)).x;\n    vec2 velocity = texture2D(uVelocity, vUv).xy;\n    velocity.xy -= vec2(R - L, T - B);\n    gl_FragColor = vec4(velocity, 0.0, 1.0);\n  }\n`\n","export default `\n  precision mediump float;\n  precision mediump sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying highp vec2 vUv;\n  varying highp vec2 vL;\n  varying highp vec2 vR;\n  varying highp vec2 vT;\n  varying highp vec2 vB;\n  uniform sampler2D uPressure;\n  uniform sampler2D uDivergence;\n\n  vec2 boundary (vec2 uv) {\n    return uv;\n    // uncomment if you use wrap or repeat texture mode\n    // uv = min(max(uv, 0.0), 1.0);\n    // return uv;\n  }\n\n  void main () {\n    float L = texture2D(uPressure, boundary(vL)).x;\n    float R = texture2D(uPressure, boundary(vR)).x;\n    float T = texture2D(uPressure, boundary(vT)).x;\n    float B = texture2D(uPressure, boundary(vB)).x;\n    float C = texture2D(uPressure, vUv).x;\n    float divergence = texture2D(uDivergence, vUv).x;\n    float pressure = (L + R + B + T - divergence) * 0.25;\n    gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n\n  uniform sampler2D uTarget;\n  uniform float aspectRatio;\n  uniform vec3 color;\n  uniform vec2 point;\n  uniform float radius;\n\n  void main () {\n    vec2 p = vUv - point.xy;\n    p.x *= aspectRatio;\n    vec3 splat = exp(-dot(p, p) / radius) * color;\n    vec3 base = texture2D(uTarget, vUv).xyz;\n    gl_FragColor = vec4(base + splat, 1.0);\n  }\n`\n","export default `\n  precision highp float;\n  precision highp sampler2D;\n\n  // This shader is from the awesome demo at:\n  // https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\n  varying vec2 vUv;\n  varying vec2 vL;\n  varying vec2 vR;\n  varying vec2 vT;\n  varying vec2 vB;\n  uniform sampler2D uVelocity;\n  uniform sampler2D uCurl;\n  uniform float curl;\n  uniform float dt;\n\n  void main () {\n    float L = texture2D(uCurl, vL).x;\n    float R = texture2D(uCurl, vR).x;\n    float T = texture2D(uCurl, vT).x;\n    float B = texture2D(uCurl, vB).x;\n    float C = texture2D(uCurl, vUv).x;\n\n    vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n    force /= length(force) + 0.0001;\n    force *= curl * C;\n    force.y *= -1.0;\n\n    vec2 vel = texture2D(uVelocity, vUv).xy;\n    gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n  }\n`\n","import { useMemo } from 'react'\nimport { useProgram, useProgramUniforms } from '@react-vertex/core'\nimport * as shaders from './shaders'\n\nfunction useProgramAndUniforms(gl, frag) {\n  const program = useProgram(gl, shaders.vert, frag)\n  const uniforms = useProgramUniforms(gl, program)\n\n  const memoized = useMemo(() => {\n    return { program, uniforms }\n  }, [program, uniforms])\n\n  return memoized\n}\n\nexport default function usePrograms(gl, hasLinear) {\n  const advectionFrag = hasLinear ? shaders.advection : shaders.advectionManual\n\n  const advection = useProgramAndUniforms(gl, advectionFrag)\n  const background = useProgramAndUniforms(gl, shaders.background)\n  const clear = useProgramAndUniforms(gl, shaders.clear)\n  const color = useProgramAndUniforms(gl, shaders.color)\n  const curl = useProgramAndUniforms(gl, shaders.curl)\n  const displayShading = useProgramAndUniforms(gl, shaders.displayShading)\n  const divergence = useProgramAndUniforms(gl, shaders.divergence)\n  const gradient = useProgramAndUniforms(gl, shaders.gradient)\n  const pressure = useProgramAndUniforms(gl, shaders.pressure)\n  const splat = useProgramAndUniforms(gl, shaders.splat)\n  const vorticity = useProgramAndUniforms(gl, shaders.vorticity)\n\n  const memoized = useMemo(() => {\n    return {\n      advection,\n      background,\n      clear,\n      color,\n      curl,\n      displayShading,\n      divergence,\n      gradient,\n      pressure,\n      splat,\n      vorticity,\n    }\n  }, [\n    advection,\n    background,\n    clear,\n    color,\n    curl,\n    displayShading,\n    divergence,\n    gradient,\n    pressure,\n    splat,\n    vorticity,\n  ])\n\n  return memoized\n}\n","import { useMemo } from 'react'\nimport { useFBO, useDoubleFBO } from '@react-vertex/core'\n\nfunction useFramebuffers(gl, dyeSize, simSize, formats) {\n  const { R, RG, RGBA, halfFloat, hasLinear } = formats\n\n  const getOptsRFormat = () => ({\n    type: halfFloat,\n    minMag: gl.NEAREST,\n    format: R.format,\n    internalFormat: R.internalFormat,\n  })\n\n  const getOptsRGFormat = () => ({\n    type: halfFloat,\n    minMag: hasLinear ? gl.LINEAR : gl.NEAREST,\n    format: RG.format,\n    internalFormat: RG.internalFormat,\n  })\n\n  const getOptsRGBAFormat = () => ({\n    type: halfFloat,\n    minMag: hasLinear ? gl.LINEAR : gl.NEAREST,\n    format: RGBA.format,\n    internalFormat: RGBA.internalFormat,\n  })\n\n  const curlFBO = useFBO(gl, ...simSize, getOptsRFormat)\n  const divergenceFBO = useFBO(gl, ...simSize, getOptsRFormat)\n  const densityDFBO = useDoubleFBO(gl, ...dyeSize, getOptsRGBAFormat)\n  const pressureDFBO = useDoubleFBO(gl, ...simSize, getOptsRFormat)\n  const velocityDFBO = useDoubleFBO(gl, ...simSize, getOptsRGFormat)\n\n  const memoized = useMemo(() => {\n    return {\n      curlFBO,\n      divergenceFBO,\n      densityDFBO,\n      pressureDFBO,\n      velocityDFBO,\n    }\n  }, [curlFBO, divergenceFBO, densityDFBO, pressureDFBO, velocityDFBO])\n\n  return memoized\n}\n\nexport default useFramebuffers\n","import { useEffect, useMemo } from 'react'\nimport { timer } from 'd3-timer'\nimport { useCanvas } from '@react-vertex/core'\nimport { generateColor } from '../utils'\n\nexport function Pointer() {\n  this.id = -1\n  this.x = 0\n  this.y = 0\n  this.dx = 0\n  this.dy = 0\n  this.down = false\n  this.moved = false\n  this.color = [30, 0, 300]\n}\n\nexport default function usePointers() {\n  const canvas = useCanvas()\n\n  const pointers = useMemo(() => {\n    return [new Pointer()]\n  }, [])\n\n  useEffect(() => {\n    let lastColorChange = 0\n\n    const timerLoop = timer(() => {\n      if (lastColorChange + 100 < Date.now()) {\n        lastColorChange = Date.now()\n\n        for (let i = 0; i < pointers.length; i++) {\n          const p = pointers[i]\n          p.color = generateColor()\n        }\n      }\n    })\n\n    return () => timerLoop.stop()\n  })\n\n  useEffect(() => {\n    function onMouseMove(e) {\n      let x = e.pageX\n      let y = e.pageY\n\n      x -= canvas.offsetLeft\n      y -= canvas.offsetTop\n\n      pointers[0].moved = pointers[0].down\n      pointers[0].dx = (x - pointers[0].x) * 5.0\n      pointers[0].dy = (y - pointers[0].y) * 5.0\n      pointers[0].x = x\n      pointers[0].y = y\n    }\n\n    function onTouchMove(e) {\n      e.preventDefault()\n\n      const touches = e.targetTouches\n\n      for (let i = 0; i < touches.length; i++) {\n        const pointer = pointers[i]\n        pointer.moved = pointer.down\n\n        let x = touches[i].pageX\n        let y = touches[i].pageY\n\n        x -= canvas.offsetLeft\n        y -= canvas.offsetTop\n\n        pointer.dx = (x - pointer.x) * 8.0\n        pointer.dy = (y - pointer.y) * 8.0\n        pointer.x = x\n        pointer.y = y\n      }\n    }\n\n    function onMouseDown() {\n      pointers[0].down = true\n      pointers[0].color = generateColor()\n    }\n\n    function onTouchStart(e) {\n      e.preventDefault()\n\n      const touches = e.targetTouches\n\n      for (let i = 0; i < touches.length; i++) {\n        if (i >= pointers.length) {\n          pointers.push(new Pointer())\n        }\n\n        let x = touches[i].pageX\n        let y = touches[i].pageY\n\n        x -= canvas.offsetLeft\n        y -= canvas.offsetTop\n\n        pointers[i].id = touches[i].identifier\n        pointers[i].down = true\n        pointers[i].x = x\n        pointers[i].y = y\n        pointers[i].color = generateColor()\n      }\n    }\n\n    function onMouseUp() {\n      pointers[0].down = false\n    }\n\n    function onTouchEnd(e) {\n      const touches = e.changedTouches\n\n      for (let i = 0; i < touches.length; i++) {\n        for (let j = 0; j < pointers.length; j++) {\n          if (touches[i].identifier == pointers[j].id) {\n            pointers[j].down = false\n          }\n        }\n      }\n    }\n\n    // canvas.addEventListener('mousemove', onMouseMove)\n    // canvas.addEventListener('touchmove', onTouchMove, false)\n    // canvas.addEventListener('mousedown', onMouseDown)\n    // canvas.addEventListener('touchstart', onTouchStart)\n    // window.addEventListener('mouseup', onMouseUp)\n    // window.addEventListener('touchend', onTouchEnd)\n\n    return () => {\n      canvas.removeEventListener('mousemove', onMouseMove)\n      canvas.removeEventListener('touchmove', onTouchMove, false)\n      canvas.removeEventListener('mousedown', onMouseDown)\n      canvas.removeEventListener('touchstart', onTouchStart)\n      window.removeEventListener('mouseup', onMouseUp)\n      window.removeEventListener('touchend', onTouchEnd)\n    }\n  }, [pointers, canvas])\n\n  return pointers\n}\n","import { useMemo } from 'react'\nimport { useWebGLVersion } from '@react-vertex/core'\n\nfunction supportRenderTextureFormat(gl, internalFormat, format, type) {\n  const texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null)\n\n  const fbo = gl.createFramebuffer()\n  const attach = gl.COLOR_ATTACHMENT0\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, attach, gl.TEXTURE_2D, texture, 0)\n\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n\n  if (status != gl.FRAMEBUFFER_COMPLETE) {\n    return false\n  }\n\n  return true\n}\n\nfunction getSupportedFormat(gl, internalFormat, format, type) {\n  if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n    switch (internalFormat) {\n      case gl.R16F:\n        return getSupportedFormat(gl, gl.RG16F, gl.RG, type)\n      case gl.RG16F:\n        return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type)\n      default:\n        return null\n    }\n  }\n\n  return { internalFormat, format }\n}\n\nexport default function useFormats(gl) {\n  const version = useWebGLVersion()\n\n  const memoized = useMemo(() => {\n    let texHalfFLoat\n    let hasLinear\n\n    const webgl2 = version === 2\n\n    if (webgl2) {\n      gl.getExtension('EXT_color_buffer_float')\n      hasLinear = !!gl.getExtension('OES_texture_float_linear')\n    } else {\n      texHalfFLoat = gl.getExtension('OES_texture_half_float')\n      hasLinear = !!gl.getExtension('OES_texture_half_float_linear')\n    }\n\n    const halfFloat = webgl2 ? gl.HALF_FLOAT : texHalfFLoat.HALF_FLOAT_OES\n\n    let RGBA, RG, R\n\n    if (webgl2) {\n      RGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloat)\n      RG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloat)\n      R = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloat)\n    } else {\n      RGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloat)\n      RG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloat)\n      R = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloat)\n    }\n\n    return {\n      RGBA,\n      RG,\n      R,\n      halfFloat,\n      hasLinear,\n    }\n  }, [gl, version])\n\n  return memoized\n}\n","import { useMemo } from 'react'\n\nexport default function useResolution(size, width, height) {\n  const memoized = useMemo(() => {\n    let aspectRatio = 1\n\n    if (width && height) {\n      aspectRatio = width / height\n    }\n\n    if (aspectRatio < 1) {\n      aspectRatio = 1.0 / aspectRatio\n    }\n\n    const max = Math.round(size * aspectRatio)\n    const min = Math.round(size)\n\n    if (width > height) {\n      return [max, min]\n    } else {\n      return [min, max]\n    }\n  }, [size, width, height])\n\n  return memoized\n}\n","import { useEffect } from 'react'\nimport { timer } from 'd3-timer'\nimport { convertHex } from '@react-vertex/color-hooks'\nimport { useWebGLContext, useCanvasSize } from '@react-vertex/core'\nimport * as config from './config'\nimport { generateColor } from './utils'\nimport {\n  usePointers,\n  usePrograms,\n  useFramebuffers,\n  useFormats,\n  useResolution,\n} from './customHooks'\n\nconst backColor = convertHex('#000000')\n\nfunction Simulation() {\n  const { width, clientWidth, height, clientHeight } = useCanvasSize()\n\n  const gl = useWebGLContext()\n  const formats = useFormats(gl)\n\n  const pointers = usePointers()\n  const programs = usePrograms(gl, formats.hasLinear)\n\n  const simSize = useResolution(config.SIM_RESOLUTION, width, height)\n  const dyeSize = useResolution(config.DYE_RESOLUTION, width, height)\n\n  const framebuffers = useFramebuffers(gl, dyeSize, simSize, formats)\n\n  useEffect(() => {\n    const {\n      advection,\n      background,\n      clear,\n      color,\n      curl,\n      displayShading,\n      divergence,\n      gradient,\n      pressure,\n      splat,\n      vorticity,\n    } = programs\n\n    const {\n      curlFBO,\n      divergenceFBO,\n      densityDFBO,\n      pressureDFBO,\n      velocityDFBO,\n    } = framebuffers\n\n    const splatStack = []\n\n    const renderToBuffer = (() => {\n      const verts = new Float32Array([-1, -1, -1, 1, 1, 1, 1, -1])\n      const index = new Uint16Array([0, 1, 2, 0, 2, 3])\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer())\n      gl.bufferData(gl.ARRAY_BUFFER, verts, gl.STATIC_DRAW)\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer())\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, index, gl.STATIC_DRAW)\n      gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0)\n      gl.enableVertexAttribArray(0)\n\n      return buffer => {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, buffer)\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0)\n      }\n    })()\n\n    function input() {\n      if (splatStack.length > 0) {\n        multipleSplats(splatStack.pop())\n      }\n\n      for (let i = 0; i < pointers.length; i++) {\n        const p = pointers[i]\n        if (p.moved) {\n          updateSplat(p.x, p.y, p.dx, p.dy, p.color)\n          p.moved = false\n        }\n      }\n    }\n\n    function step(dt) {\n      gl.disable(gl.BLEND)\n      gl.viewport(0, 0, simSize[0], simSize[1])\n\n      gl.useProgram(curl.program)\n      gl.uniform2f(curl.uniforms.texelSize, 1.0 / simSize[0], 1.0 / simSize[1])\n      gl.uniform1i(curl.uniforms.uVelocity, velocityDFBO.read.attach(0))\n      renderToBuffer(curlFBO.fbo)\n\n      gl.useProgram(vorticity.program)\n      gl.uniform2f(\n        vorticity.uniforms.texelSize,\n        1.0 / simSize[0],\n        1.0 / simSize[1],\n      )\n      gl.uniform1i(vorticity.uniforms.uVelocity, velocityDFBO.read.attach(0))\n      gl.uniform1i(vorticity.uniforms.uCurl, curlFBO.attach(1))\n      gl.uniform1f(vorticity.uniforms.curl, config.CURL)\n      gl.uniform1f(vorticity.uniforms.dt, dt)\n      renderToBuffer(velocityDFBO.write.fbo)\n      velocityDFBO.swap()\n\n      gl.useProgram(divergence.program)\n      gl.uniform2f(\n        divergence.uniforms.texelSize,\n        1.0 / simSize[0],\n        1.0 / simSize[1],\n      )\n      gl.uniform1i(divergence.uniforms.uVelocity, velocityDFBO.read.attach(0))\n      renderToBuffer(divergenceFBO.fbo)\n\n      gl.useProgram(clear.program)\n      gl.uniform1i(clear.uniforms.uTexture, pressureDFBO.read.attach(0))\n      gl.uniform1f(clear.uniforms.value, config.PRESSURE_DISSIPATION)\n      renderToBuffer(pressureDFBO.write.fbo)\n      pressureDFBO.swap()\n\n      gl.useProgram(pressure.program)\n      gl.uniform2f(\n        pressure.uniforms.texelSize,\n        1.0 / simSize[0],\n        1.0 / simSize[1],\n      )\n      gl.uniform1i(pressure.uniforms.uDivergence, divergenceFBO.attach(0))\n\n      for (let i = 0; i < config.PRESSURE_ITERATIONS; i++) {\n        gl.uniform1i(pressure.uniforms.uPressure, pressureDFBO.read.attach(1))\n        renderToBuffer(pressureDFBO.write.fbo)\n        pressureDFBO.swap()\n      }\n\n      gl.useProgram(gradient.program)\n      gl.uniform2f(\n        gradient.uniforms.texelSize,\n        1.0 / simSize[0],\n        1.0 / simSize[1],\n      )\n      gl.uniform1i(gradient.uniforms.uPressure, pressureDFBO.read.attach(0))\n      gl.uniform1i(gradient.uniforms.uVelocity, velocityDFBO.read.attach(1))\n      renderToBuffer(velocityDFBO.write.fbo)\n      velocityDFBO.swap()\n\n      gl.useProgram(advection.program)\n      gl.uniform2f(\n        advection.uniforms.texelSize,\n        1.0 / simSize[0],\n        1.0 / simSize[1],\n      )\n\n      if (!formats.shasLinear) {\n        gl.uniform2f(\n          advection.uniforms.dyeTexelSize,\n          1.0 / simSize[0],\n          1.0 / simSize[1],\n        )\n      }\n\n      const velocityId = velocityDFBO.read.attach(0)\n      gl.uniform1i(advection.uniforms.uVelocity, velocityId)\n      gl.uniform1i(advection.uniforms.uSource, velocityId)\n      gl.uniform1f(advection.uniforms.dt, dt)\n      gl.uniform1f(advection.uniforms.dissipation, config.VELOCITY_DISSIPATION)\n      renderToBuffer(velocityDFBO.write.fbo)\n      velocityDFBO.swap()\n\n      gl.viewport(0, 0, dyeSize[0], dyeSize[1])\n\n      if (!formats.hasLinear) {\n        gl.uniform2f(\n          advection.uniforms.dyeTexelSize,\n          1.0 / dyeSize[0],\n          1.0 / dyeSize[1],\n        )\n      }\n\n      gl.uniform1i(advection.uniforms.uVelocity, velocityDFBO.read.attach(0))\n      gl.uniform1i(advection.uniforms.uSource, densityDFBO.read.attach(1))\n      gl.uniform1f(advection.uniforms.dissipation, config.DENSITY_DISSIPATION)\n      renderToBuffer(densityDFBO.write.fbo)\n      densityDFBO.swap()\n    }\n\n    function render(target) {\n      if (target == null || !config.TRANSPARENT) {\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA)\n        gl.enable(gl.BLEND)\n      } else {\n        gl.disable(gl.BLEND)\n      }\n\n      const tWidth = target == null ? width : dyeSize[0]\n      const tHeight = target == null ? height : dyeSize[1]\n\n      gl.viewport(0, 0, width, height)\n\n      if (!config.TRANSPARENT) {\n        gl.useProgram(color.program)\n        gl.uniform4f(color.uniforms.color, ...backColor)\n        renderToBuffer(target)\n      }\n\n      if (target == null && config.TRANSPARENT) {\n        gl.useProgram(background.program)\n        gl.uniform1f(background.uniforms.aspectRatio, tWidth / tHeight)\n        renderToBuffer(null)\n      }\n\n      gl.useProgram(displayShading.program)\n      gl.uniform2f(\n        displayShading.uniforms.texelSize,\n        1.0 / tWidth,\n        1.0 / tHeight,\n      )\n      gl.uniform1i(displayShading.uniforms.uTexture, densityDFBO.read.attach(0))\n\n      renderToBuffer(target)\n    }\n\n    function updateSplat(x, y, dx, dy, splatRGB) {\n      gl.viewport(0, 0, simSize[0], simSize[1])\n\n      const centerX = x / clientWidth\n      const centerY = 1.0 - y / clientHeight\n\n      gl.useProgram(splat.program)\n      gl.uniform1i(splat.uniforms.uTarget, velocityDFBO.read.attach(0))\n      gl.uniform1f(splat.uniforms.aspectRatio, width / height)\n      gl.uniform2f(splat.uniforms.point, centerX, centerY)\n      gl.uniform3f(splat.uniforms.color, dx, -dy, 1.0)\n      gl.uniform1f(splat.uniforms.radius, config.SPLAT_RADIUS / 100.0)\n      renderToBuffer(velocityDFBO.write.fbo)\n      velocityDFBO.swap()\n\n      gl.viewport(0, 0, dyeSize[0], dyeSize[1])\n      gl.uniform1i(splat.uniforms.uTarget, densityDFBO.read.attach(0))\n      gl.uniform3f(splat.uniforms.color, splatRGB.r, splatRGB.g, splatRGB.b)\n      renderToBuffer(densityDFBO.write.fbo)\n      densityDFBO.swap()\n    }\n\n    function multipleSplats(amount) {\n      for (let i = 0; i < amount; i++) {\n        const splatRGB = generateColor()\n        splatRGB.r *= 10.0\n        splatRGB.g *= 10.0\n        splatRGB.b *= 10.0\n        const x = width * Math.random()\n        const y = height * Math.random()\n        const dx = 1000 * (Math.random() - 0.5)\n        const dy = 1000 * (Math.random() - 0.5)\n        updateSplat(x, y, dx, dy, splatRGB)\n      }\n    }\n\n    const timerLoop = timer(() => {\n      input()\n      step(0.016)\n      render(null)\n    })\n\n    multipleSplats(parseInt(Math.random() * 20) + 20)\n\n    return () => timerLoop.stop()\n  }, [\n    gl,\n    formats,\n    pointers,\n    simSize,\n    dyeSize,\n    width,\n    clientWidth,\n    height,\n    clientHeight,\n    programs,\n    framebuffers,\n  ])\n\n  return null\n}\n\nexport default Simulation\n","import React, { useRef } from 'react'\nimport { Canvas } from '@react-vertex/core'\nimport { useMeasure } from '@react-vertex/dom-hooks'\nimport Simulation from './Simulation'\n\nconst attrs = {\n  alpha: true,\n  depth: false,\n  stencil: false,\n  antialias: false,\n  preserveDrawingBuffer: false,\n}\n\nconst style = {\n  borderRadius: 4,\n  cursor: 'pointer',\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n}\n\n// ORIGINAL https://github.com/PavelDoGreat/WebGL-Fluid-Simulation\n\nconst FluidSimulation = ( props) =>{\n  const container = useRef()\n  const { width } = useMeasure(container)\n\n  return (\n\n      <div ref={container}>\n        {width ? (\n          <Canvas\n            webgl2\n            width={width}\n            height={window.innerHeight-4}\n            canvasStyle={style}\n            contextAttrs={attrs}\n          >\n            <Simulation />\n\n          </Canvas>\n        ) : null}\n        {props.children}\n\n      </div>\n  )\n}\n\nexport default FluidSimulation\n","import React from \"react\";\nimport \"./styles/css/Home.css\";\nimport Fade from \"react-reveal/Fade\";\nimport Slide from \"react-reveal/Slide\";\nimport FluidSimulation from \"./components/animation/fluid/index\";\n\nconst App: React.FC = () => {\n  return (\n    <main>\n      <section className=\"welcome no-space-section\">\n      <div className=\"who-am-i\">\n          <Fade top>\n            <label className=\"main-name\">Yuri Farias</label>\n          </Fade>\n          <Slide bottom>\n            <label className=\"sub-title\">Olá, eu crio coisas!</label>\n          </Slide>\n        </div>\n        <FluidSimulation />\n\n      </section>\n    </main>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}